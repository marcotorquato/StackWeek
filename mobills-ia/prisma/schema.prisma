generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id            String                   @id @default(uuid())
  name          String
  type          TransactionType
  amount        Decimal                  @db.Decimal(10, 2)
  category      TransactionCategory
  paymentMethod TransactionPaymentMethod
  date          DateTime
  createdAt     DateTime                 @default(now())
  updatedAt     DateTime                 @updatedAt
  userId        String
}

enum TransactionType {
  DEPOSIT
  EXPENSE
  INVESTMENT
}

enum TransactionCategory {
  HOUSING
  TRANSPORTATION
  FOOD
  ENTERTAINMENT
  HEALTH
  UTILITY
  SALARY
  EDUCATION
  OTHER
}

enum TransactionPaymentMethod {
  CREDIT_CARD
  DEBIT_CARD
  BANK_TRANSFER
  BANK_SLIP
  CASH
  PIX
  PAYPAL
  OTHER
}

model Order {
  id             Int       @id @default(autoincrement())
  ticketNumber   String    @unique
  email          String
  profile        String
  destination    String
  note           String?
  status         OrderStatus @default(REQUESTED)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  pdfAttachment  String?  
  products       OrderProduct[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Destination {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Profile {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model OrderProduct {
  id          Int       @id @default(autoincrement())
  orderId     Int
  productId   Int
  quantity    Int
  order       Order     @relation(fields: [orderId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
  @@unique([orderId, productId]) // Ensures a product can't be duplicated in the same order
}

enum OrderStatus {
  REQUESTED
  UNDER_APPROVAL
  IN_PREPARATION
  DELIVERED
}
